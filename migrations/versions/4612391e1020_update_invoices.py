"""Update invoices

Revision ID: 4612391e1020
Revises: 
Create Date: 2025-08-19 18:22:33.808840

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '4612391e1020'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('accounts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('account_level', sa.INTEGER(), nullable=False),
    sa.Column('account_name', sa.String(length=150), nullable=False),
    sa.Column('account_debit', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.Column('account_credit', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.Column('account_ratio', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('groups',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('group_name', sa.String(length=150), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('invoices',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('store_name', sa.String(length=255), nullable=False),
    sa.Column('store_address', sa.String(length=255), nullable=False),
    sa.Column('tax_number', sa.String(length=255), nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('total', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.Column('taxes', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.Column('net_total', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.Column('user_name', sa.String(length=255), nullable=False),
    sa.Column('account_id', sa.String(length=255), nullable=False),
    sa.Column('status', postgresql.ENUM('PENDING', 'IN_PROGRESS', 'DONE', 'FAILED', name='invoice_status_enum'), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('invoice_item',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('item_name', sa.String(length=255), nullable=False),
    sa.Column('quantity', sa.INTEGER(), nullable=False),
    sa.Column('price', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.Column('tax', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.Column('invoice_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('item_name', sa.String(length=150), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('group_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('items')
    op.drop_table('invoice_item')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_table('invoices')
    op.drop_table('groups')
    op.drop_table('accounts')
    # ### end Alembic commands ###
